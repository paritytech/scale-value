[package]
name = "scale-value"
version = "0.17.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"

license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/paritytech/scale-value"
documentation = "https://docs.rs/scale-value"
homepage = "https://www.parity.io/"
description = "Encode and decode values of arbitrary shapes to SCALE bytes"
keywords = ["parity", "scale", "encoding", "decoding"]
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE"]
rust-version = "1.81.0"

[features]
default = ["serde", "from-string", "parser-ss58"]

# Internal feature for tests that needs std.
__std = []

# Enable support for parsing strings into Values.
from-string = ["dep:yap"]

# Enable serde support for serializing/deserializing Values.
serde = ["dep:serde", "scale-bits/serde"]

# Provide an ss58 address parser
parser-ss58 = ["dep:base58", "dep:blake2", "from-string"]

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive", "full"] }
serde = { version = "1.0.124", default-features = false, features = ["derive"], optional = true }
scale-decode = { version = "0.15.0", default-features = false }
scale-encode = { version = "0.9.0", default-features = false, features = ["bits"] }
scale-bits = { version = "0.6.0", default-features = false, features = ["serde", "scale-info"] }
either = { version = "1.6.1", default-features = false }
yap = { version = "0.12.0", optional = true }
base58 = { version = "0.2.0", optional = true }
blake2 = { version = "0.10.6", optional = true, default_features = false }
thiserror = { version = "2.0.0", default-features = false }
scale-type-resolver = "0.2.0"

[dev-dependencies]
hex = "0.4.3"
serde_json = { version = "1.0.64", default-features = false, features = ["alloc"] }
scale-decode = { version = "0.15.0", default-features = false, features = ["derive"] }
scale-info = { version = "2.11.5", default-features = false, features = ["derive"] }
